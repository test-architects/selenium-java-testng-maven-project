Credits chat gpt

1. **className**:
   ```java
   @FindBy(className = "example-class")
   WebElement elementByClassName;
   ```

2. **css**:
   ```java
   @FindBy(css = ".example-class")
   WebElement elementByCss;
   ```

3. **how**:
   ```java
   @FindBy(how = How.ID, using = "example-id")
   WebElement elementByHow;
   ```

4. **id**:
   ```java
   @FindBy(id = "example-id")
   WebElement elementById;
   ```

5. **linkText**:
   ```java
   @FindBy(linkText = "Example Link Text")
   WebElement elementByLinkText;
   ```

6. **name**:
   ```java
   @FindBy(name = "example-name")
   WebElement elementByName;
   ```

7. **partialLinkText**:
   ```java
   @FindBy(partialLinkText = "Partial Link Text")
   WebElement elementByPartialLinkText;
   ```

8. **tagName**:
   ```java
   @FindBy(tagName = "example-tag")
   WebElement elementByTagName;
   ```

9. **using**:
   ```java
   @FindBy(how = How.XPATH, using = "//div[@class='example']")
   WebElement elementByUsing;
   ```

10. **xpath**:
    ```java
    @FindBy(xpath = "//div[@class='example']")
    WebElement elementByXpath;
    ```

### FindBy, FindBys, and FindAll

- **@FindBy**: Locates a single WebElement using one of the provided locator strategies.
  ```java
  @FindBy(id = "example-id")
  WebElement element;
  ```

- **@FindBys**: Uses multiple `@FindBy` criteria in sequence (AND condition) to locate a WebElement. All conditions must be true.
  ```java
  @FindBys({
      @FindBy(id = "parent-id"),
      @FindBy(tagName = "child-tag")
  })
  WebElement element;
  ```

- **@FindAll**: Uses multiple `@FindBy` criteria in parallel (OR condition) to locate WebElements. Any of the conditions can be true.
  ```java
  @FindAll({
      @FindBy(id = "example-id"),
      @FindBy(className = "example-class")
  })
  List<WebElement> elements;
  ```

These annotations are part of Selenium's PageFactory, which helps in implementing the Page Object Model (POM) design pattern.